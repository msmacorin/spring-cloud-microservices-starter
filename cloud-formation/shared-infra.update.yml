AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  bucketPrefix: 
    Type: String
    Description: Application Version to Deploy
    Default: "spring-cloud-starter-"
Resources:    
  S3AppBucket:
    DeletionPolicy: Delete    
    Type: "AWS::S3::Bucket"
    DependsOn: LambdaInvokePermission    
    Properties:
      BucketName: !Sub  "${bucketPrefix}-deployments-s3"
      NotificationConfiguration:
        LambdaConfigurations:
          - 
            Event: s3:ObjectCreated:*
            Filter: 
              S3Key:
                Rules:
                  -
                    Name: suffix
                    Value: zip
            Function: !GetAtt Lambda.Arn
      CorsConfiguration:
        CorsRules:
          -  AllowedHeaders: ['*']
             AllowedMethods: ['GET']
             AllowedOrigins: ['*']
             Id: rule1
             MaxAge: '3000'
      AccessControl: PublicRead
      WebsiteConfiguration:
        ErrorDocument: index.html
        IndexDocument: index.html
  BucketPolicyApp:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref S3AppBucket
      PolicyDocument:
        Statement:
          -
            Sid: "ABC123"
            Action:
              - "s3:GetObject"
            Effect: Allow
            Resource: !Join ["", ["arn:aws:s3:::", !Ref S3AppBucket, "/*"]]
            Principal:
              AWS:
                - "*"  
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"    
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt Lambda.Arn
      Action: "lambda:InvokeFunction"
      Principal: "s3.amazonaws.com"
      SourceAccount: !Ref "AWS::AccountId"
      SourceArn: !Join ["",["arn:aws:s3:::", !Sub "${bucketPrefix}-deployments-s3"]]                   
  Lambda:
    Type: AWS::Lambda::Function    
    Properties:      
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables: 
          FUNCTION_NAME: "s3Function"
      Code:
        S3Bucket: !ImportValue lambdainf-lambdabucket
        S3Key: Lambda-0.0.1-SNAPSHOT-aws.jar
      Handler: com.easyrun.lambda.handlers.TestHandler
      Runtime: "java8"   
      Timeout: 100      
Outputs:    
  appbucketurl:
    Description: Shared Infrastructure App Bucket
    Value: !GetAtt S3AppBucket.WebsiteURL
    Export: # added to export
      Name: sharedinf-appbucketurl
  appbucket:
    Description: App Bucket Name
    Value: !Ref S3AppBucket
    Export:
      Name: sharedinf-appbucketname